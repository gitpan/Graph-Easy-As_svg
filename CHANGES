Revision history for Graph::Easy::As_svg:

2005-09-18 v0.08 Tels 40 tests - Fix, fix, fix, fix the bugs...
  * require Graph::Easy 0.29
  * 'fill' defaults to white
  * edge labels use "label-color" and fall back to "color"
  * improve support for multi-line labels
  * fix bidirectional edges (render their arrows correctly)
  * better center the text on triangle|invtriangel shaped nodes
  * better node sizes for the various shapes
  * draw graph background and border if nec.
  * double lines on edges are rendered better at the arrow-ends
  * add support for the following node shapes:
    + invhouse, octagon, hexagon, septagon, parallelogram, trapezium 
  * draw background for non-rect nodes
  * correctly draw "border-style: double" on the various node shapes
  * draw backgrounds for edge cells (for groups and when background is set)
  * add tests for POD via Test::POD (t/pod.t)
  * add tests for POD coverage via Test::POD::Coverage (t/pod_cov.t)

2005-09-04 v0.07 Tels 38 tests - Fix, fix, fix, fix the bugs...
  * require Graph::Easy 0.27
  * added tests for as_svg_file()
  * fix rendering of edge cells to be compatible with new Graph::Easy code
  * arrow lines on non-solid edges are now solid (instead of dashed etc)
  * render the different arrow styles (closed, open, filled)
  * render nodes with "shape: point"
  * produce shorter code by using default attributes/classes better 
  * render node shapes: diamond, house, triangle, invtriangle
  * render edge style "double-dash"
  * "fill" is the fill color, "background" the background
  * better skipping of non-SVG attributes

2005-07-13 v0.06 Tels 31 tests - Fix, fix, fix, fix the bugs...
  * require Graph::Easy 0.22
  * As_svg: use Graph::Easy to allow a require w/o Graph::Easy

Seperated Graph::Easy::As_svg from Graph::Easy:

2005-06-25 v0.05 Tels 31 tests - Fix, fix, fix, fix the bugs...
  * Much more complete: output class attributes, stylesheets etc.
  * generate SVG 1.1
  * use "stroke-linecap: round" to generate nicer arrow heads
  * shorten output by using a few tricks
  * render node borders in different styles (dotted etc)
  * render edge lines in different styles (dotted etc)

For older CHANGES, please see the Graph::Easy package.

